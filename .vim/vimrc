" An example for a vimrc file.
"
" Maintainer:	The Vim Project <https://github.com/vim/vim>
" Last Change:	2023 Aug 10
" Former Maintainer:	Bram Moolenaar <Bram@vim.org>
"
" To use it, copy it to
"	       for Unix:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"	 for MS-Windows:  $VIM\_vimrc
"	      for Haiku:  ~/config/settings/vim/vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings, bail
" out.
if v:progname =~? "evim"
  finish
endif

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  if has('persistent_undo')
    set undofile	" keep an undo file (undo changes after closing)
  endif
endif

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif

" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78
augroup END

" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
" The ! means the package won't be loaded right away but when plugins are
" loaded during initialization.
if has('syntax') && has('eval')
  packadd! matchit
endif

" To insert space characters whenever the tab key is pressed
set expandtab
" the number of space characters that will be inserted when the tab key is pressed
set tabstop=4
" the number of space characters inserted for indentation
set shiftwidth=4
set number
set incsearch hls
syntax on

" The values \033[X q represent escape sequences for cursor shapes:
" 0: Blinking block
" 1: Blinking block
" 2: Steady block
" 3: Blinking underline
" 4: Steady underline
" 5: Blinking vertical bar
" 6: Steady vertical bar
" t_SI defines the cursor shape when entering Insert mode.
let &t_SI="\033[5 q"  " Underline cursor for Insert mode
" t_EI defines the cursor shape when exiting Insert mode (returning to Normal mode).
let &t_EI="\033[2 q"  " Block cursor for Normal mode

